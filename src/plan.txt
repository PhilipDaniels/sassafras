* Keep structure and member names the same during the initial port,
  it makes it easier to refer back to the original code and port
  piece-by-piece.
* Embed Cargo version number into the exe.
* Embed Git sha and branch into the exe.



Sass_Context is the C context,    it is defined in src/sass_context.hpp
Sass::Context is the C++ context, it is defined in src/context.hpp



We have 3 top-level structures in the C API
===========================================
Sass_Compiler
  c_ctx: Sass_Context
  cpp_ctx: Context
  root: Block_Obj

Sass_Data_Context
  Sass_Context

Sass_File_Context
  Sass_Context


where

Sass_Context
  options: Sass_Options
    output_options: Sass_Output_Options
      inspect_options: Sass_Inspect_Options



Then we have the C++ structure
==============================
class Context
  Sass_Options c_options;
  Sass_Compiler* c_compiler;
  // much other stuff

File_Context : Context
Data_Context : Context


The way I am allocating and dropping structs using Box() is correct according to
https://www.reddit.com/r/rust/comments/3r5icb/exposing_rust_struct_to_python/



IMPLEMENT_SASS_OPTION_ACCESSOR
  creates 2 functions, a getter and a setter that just return/set the thing

IMPLEMENT_SASS_OPTION_STRING_GETTER
  creates 1 function, that returns the member if not null, else the default

IMPLEMENT_SASS_OPTION_STRING_SETTER
  creates 1 function, that a) frees the original string
                           b) calls sass_copy_c_string on the param or default, or sets to 0-null.
                           c) assigns to the field

  Therefore API methods that use this take copies of the passed pointers

IMPLEMENT_SASS_OPTION_STRING_ACCESSOR
  creates 2 functions, using IMPLEMENT_SASS_OPTION_STRING_GETTER and IMPLEMENT_SASS_OPTION_STRING_SETTER

IMPLEMENT_SASS_CONTEXT_GETTER
  creates 1 function that returns ctx->option

IMPLEMENT_SASS_CONTEXT_TAKER
  creates 1 function takes a copy of ctx->option, sets ctx->option to 0, then returns the copy
  Therefore this function releases ownership of the memory and returns it to the caller

